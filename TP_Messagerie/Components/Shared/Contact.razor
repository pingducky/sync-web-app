@using MudBlazor
@using TP_Messagerie.Services
@inject UserSession UserSession

<MudCard @onclick="UpdateReceiver" Class="mud-card">
    <MudPaper Elevation="2" Class="ma-2" Style="@GetCardStyle()">
        <MudContainer Class="contact-preview">
            <MudAvatar Size="Size.Large" Color="Color.Primary">
                @Initials
            </MudAvatar>
            <MudContainer>
                <MudText Typography="Typo.h6" FontWeight="FontWeight.Bold" Class="truncate-text">@RecipientName</MudText>
                <MudText Class="truncate-text">@PreviewText</MudText>
            </MudContainer>
            <MudContainer Class="time-notif">
                <MudText>@MessageTime</MudText>
                <MudText>
                    @if (NotificationCount > 0)
                    {
                        <MudBadge Content="@NotificationCount" Overlap="true" Class="mt-2">
                            <MudIcon Icon="@Icons.Material.Filled.Email" Size="Size.Medium" Color="Color.Default" />
                        </MudBadge>
                    }
                </MudText>
            </MudContainer>
        </MudContainer>
    </MudPaper>
</MudCard>

@code {

    [Parameter]
    public string FirstName { get; set; } = string.Empty;

    [Parameter]
    public string LastName { get; set; } = string.Empty;

    [Parameter]
    public string? RecipientName { get; set; } = string.Empty;

    [Parameter]
    public string? MessageTime { get; set; } = string.Empty;

    [Parameter]
    public string? PreviewText { get; set; } = string.Empty;

    [Parameter]
    public int? NotificationCount { get; set; } = 0;

    [Parameter]
    public EventCallback OnClick { get; set; }

    [Parameter]
    public bool IsSelected { get; set; } // Propriété indiquant si ce contact est sélectionné

    private string Initials => string.IsNullOrWhiteSpace(FirstName) || string.IsNullOrWhiteSpace(LastName)
        ? string.Empty
        : $"{FirstName[0]}{LastName[0]}".ToUpper();

    private async void UpdateReceiver()
    {
        if (OnClick.HasDelegate)
        {
            await OnClick.InvokeAsync(RecipientName);  // Transmettre le RecipientName au parent
        }
    }

    private string GetCardStyle()
    {
        return IsSelected ? "background-color: #e0e0e0;" : string.Empty; // Applique un fond gris clair si sélectionné
    }
}

<style>
    .contact-preview {
        display: flex;
        padding: 15px;
        height: 105px;
        justify-content: space-between;
    }

    .truncate-text {
        max-width: 90%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .time-notif {
        width: auto;
    }

    .mud-card {
        cursor: pointer;
    }
</style>