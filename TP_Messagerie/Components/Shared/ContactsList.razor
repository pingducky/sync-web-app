@using TP_Messagerie.Data
@using MudBlazor
@using TP_Messagerie.Services

@inject UserService UserService
@inject ConversationService ConversationService
@inject UserSession UserSession

<MudPaper Elevation="4" Class="contacts-list-paper ma-2">
    <MudContainer Class="pa-1 contact-list-container">
        @if (contacts != null && contacts.Any())
        {
            @foreach (var user in contacts)
            {
                @if (UserSession.UserName != user.Username)
                {
                    <Contact FirstName="@user.Firstname"
                             LastName="@user.Name"
                             RecipientName="@user.Username"
                             PreviewText="@getMatchedConversation(user.Username)"
                             IsSelected="@(selectedContact == user.Username)"
                             OnClick="() => HandleContactClick(user.Username)" />
                }
            }
        }
        else
        {
            <MudText>Aucun contact disponible.</MudText>
        }
    </MudContainer>
</MudPaper>

@code {
    private List<User> contacts { get; set; } = new List<User>();
    private string selectedContact { get; set; } = string.Empty;

    [Parameter]
    public List<Conversation> conversations { get; set; } = new();

    [Parameter]
    public EventCallback<string> OnContactSelected { get; set; }

    #region Evènements
    protected override async Task OnInitializedAsync()
    {
        contacts = await UserService.GetAllUsersAsync();
    }

    private async Task HandleContactClick(string recipientName)
    {
        selectedContact = recipientName;
        await OnContactSelected.InvokeAsync(recipientName);
    }
    #endregion

    #region Fonctions
    private string getMatchedConversation(string username)
    {
        var conversation = conversations.FirstOrDefault(convo =>
            convo.Participants.Any(p => p == username)
        );

        return conversation?.LastMessage ?? string.Empty; // Dernier message ou chaîne vide
    }
    #endregion
}

<style>
    .contacts-list-paper {
        height: 100vh;
        display: flex;
        flex-direction: column;
    }

    .contact-list-container {
        overflow-y: auto
    }
</style>