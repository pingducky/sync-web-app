@using TP_Messagerie.Data
@using MudBlazor
@using TP_Messagerie.Services
@inject UserService UserService

<MudPaper Elevation="4" Class="contacts-list-paper ma-2">
    <MudContainer Class="pa-1 contact-list-container">
        @if (contacts != null && contacts.Any())
        {
            @foreach (var user in contacts)
            {
                <Contact
                FirstName="@user.Firstname"
                LastName="@user.Name"
                RecipientName="@user.Username"/>
            }
        }
        else
        {
            <MudText>Aucun contact disponible.</MudText>
        }
    </MudContainer>
</MudPaper>

@code {
    [Parameter]
    public List<Conversation> Conversations { get; set; } = new List<Conversation>();
    private List<User> contacts { get; set; } = new List<User>();


    private Participant GetOtherParticipant(Conversation conversation)
    {
        return conversation.Participants.FirstOrDefault(p => p.Firstname != "John") ?? conversation.Participants.First(); // Todo : remplacer John par le vrai nom de l'user
    }

    protected override async Task OnInitializedAsync() {
        contacts = await UserService.GetAllUsersAsync();
    }
}

<style>
    .contacts-list-paper {
        height: 100vh;
        display: flex;
        flex-direction: column;
    }

    .contact-list-container {
        overflow-y: auto
    }
</style>